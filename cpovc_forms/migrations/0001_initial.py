# Generated by Django 4.0.2 on 2022-03-26 23:27

import datetime
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FormsAuditTrail',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('form_id', models.UUIDField(null=True)),
                ('form_type_id', models.CharField(max_length=250)),
                ('transaction_type_id', models.CharField(db_index=True, max_length=4, null=True)),
                ('interface_id', models.CharField(db_index=True, max_length=4, null=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('meta_data', models.TextField(null=True)),
            ],
            options={
                'db_table': 'forms_audit_trail',
            },
        ),
        migrations.CreateModel(
            name='FormsLog',
            fields=[
                ('form_log_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('form_type_id', models.CharField(max_length=250)),
                ('form_id', models.CharField(default='XXXX', max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('app_user', models.IntegerField(default=404, null=True)),
            ],
            options={
                'db_table': 'forms_log',
            },
        ),
        migrations.CreateModel(
            name='ListBanks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=150)),
                ('bank_code', models.CharField(max_length=10)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
                'db_table': 'list_bank',
            },
        ),
        migrations.CreateModel(
            name='OVCAdverseEventsFollowUp',
            fields=[
                ('adverse_condition_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('adverse_condition_description', models.CharField(max_length=20)),
                ('attendance_type', models.CharField(max_length=4, null=True)),
                ('referral_type', models.CharField(max_length=4, null=True)),
                ('adverse_event_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_adverseevents_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCAdverseEventsOtherFollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adverse_condition', models.CharField(max_length=20)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_adverseevents_other_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCBasicCategory',
            fields=[
                ('category_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_category', models.CharField(max_length=5)),
                ('case_sub_category', models.CharField(max_length=5, null=True)),
                ('case_date_event', models.DateField(default=django.utils.timezone.now)),
                ('case_nature', models.CharField(max_length=5)),
                ('case_place_of_event', models.CharField(max_length=5)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Basic Category',
                'verbose_name_plural': 'Basic Category',
                'db_table': 'ovc_basic_category',
            },
        ),
        migrations.CreateModel(
            name='OVCBasicCRS',
            fields=[
                ('case_id', models.UUIDField(default=uuid.uuid1, primary_key=True, serialize=False)),
                ('case_serial', models.CharField(default='XXXX', max_length=50)),
                ('case_reporter', models.CharField(max_length=5)),
                ('reporter_telephone', models.CharField(max_length=15, null=True)),
                ('reporter_county', models.CharField(max_length=3, null=True)),
                ('reporter_sub_county', models.CharField(max_length=3, null=True)),
                ('reporter_ward', models.CharField(max_length=100, null=True)),
                ('reporter_village', models.CharField(max_length=100, null=True)),
                ('case_date', models.DateField(default=django.utils.timezone.now)),
                ('perpetrator', models.CharField(max_length=5, null=True)),
                ('county', models.CharField(max_length=3)),
                ('constituency', models.CharField(max_length=3)),
                ('organization_unit', models.CharField(max_length=100)),
                ('case_landmark', models.CharField(max_length=50, null=True)),
                ('hh_economic_status', models.CharField(max_length=5)),
                ('family_status', models.CharField(max_length=5)),
                ('mental_condition', models.CharField(max_length=5)),
                ('physical_condition', models.CharField(max_length=5)),
                ('other_condition', models.CharField(max_length=5)),
                ('risk_level', models.CharField(max_length=5)),
                ('referral', models.CharField(default='ANNO', max_length=5)),
                ('referral_detail', models.CharField(max_length=200, null=True)),
                ('summon', models.CharField(default='ANNO', max_length=5)),
                ('case_narration', models.TextField(null=True)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, null=True)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, null=True)),
                ('case_params', models.TextField(null=True)),
                ('status', models.IntegerField(default=0)),
                ('case_comments', models.TextField(null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Basic Case Record',
                'verbose_name_plural': 'Basic Case Records',
                'db_table': 'ovc_basic_case_record',
            },
        ),
        migrations.CreateModel(
            name='OVCBasicPerson',
            fields=[
                ('person_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('relationship', models.CharField(max_length=5, null=True)),
                ('person_type', models.CharField(choices=[('PTRD', 'Reporter'), ('PTPD', 'Perpetrator'), ('PTCH', 'Child'), ('PTCG', 'Guardian')], max_length=5)),
                ('first_name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('other_names', models.CharField(max_length=50, null=True)),
                ('dob', models.DateField(null=True)),
                ('sex', models.CharField(max_length=5, null=True)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Basic Person',
                'verbose_name_plural': 'Basic Persons',
                'db_table': 'ovc_basic_person',
            },
        ),
        migrations.CreateModel(
            name='OVCBursary',
            fields=[
                ('bursary_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('bursary_type', models.CharField(max_length=4, null=True)),
                ('disbursement_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('amount', models.CharField(max_length=20, null=True)),
                ('year', models.CharField(max_length=20, null=True)),
                ('term', models.CharField(max_length=20, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('created_by', models.IntegerField(default=404, null=True)),
            ],
            options={
                'db_table': 'ovc_bursaryinfo',
            },
        ),
        migrations.CreateModel(
            name='OVCCareAssessment',
            fields=[
                ('assessment_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=4)),
                ('service', models.CharField(max_length=4)),
                ('service_status', models.CharField(max_length=4)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_assessment',
            },
        ),
        migrations.CreateModel(
            name='OVCCareEAV',
            fields=[
                ('eav_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('entity', models.CharField(max_length=5)),
                ('attribute', models.CharField(max_length=5)),
                ('value', models.CharField(max_length=25)),
                ('value_for', models.CharField(max_length=10, null=True)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_eav',
            },
        ),
        migrations.CreateModel(
            name='OVCCareEvents',
            fields=[
                ('event', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('event_type_id', models.CharField(max_length=4)),
                ('event_counter', models.IntegerField(default=0)),
                ('event_score', models.IntegerField(default=0, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_events',
            },
        ),
        migrations.CreateModel(
            name='OVCCareF1B',
            fields=[
                ('form_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=5)),
                ('entity', models.CharField(max_length=5)),
                ('value', models.SmallIntegerField(default=1)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'ovc_care_f1b',
            },
        ),
        migrations.CreateModel(
            name='OVCCarePriority',
            fields=[
                ('priority_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=4)),
                ('service', models.CharField(max_length=4)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_priority',
            },
        ),
        migrations.CreateModel(
            name='OVCCareServices',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('service_provided', models.CharField(max_length=250)),
                ('service_provider', models.CharField(max_length=250, null=True)),
                ('place_of_service', models.CharField(max_length=250, null=True)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_services',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseCategory',
            fields=[
                ('case_category_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_category', models.CharField(max_length=4)),
                ('case_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('place_of_event', models.CharField(max_length=4)),
                ('case_nature', models.CharField(max_length=4)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'verbose_name': 'Case Category',
                'verbose_name_plural': 'Case Categories',
                'db_table': 'ovc_case_category',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventClosure',
            fields=[
                ('closure_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_outcome', models.CharField(max_length=4)),
                ('date_of_case_closure', models.DateField(default=django.utils.timezone.now)),
                ('case_closure_notes', models.CharField(max_length=1000)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_event_closure',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventCourt',
            fields=[
                ('court_session_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('court_order', models.CharField(max_length=250, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_event_court',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEvents',
            fields=[
                ('case_event_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_event_type_id', models.CharField(max_length=20)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('case_event_details', models.CharField(max_length=100)),
                ('case_event_notes', models.CharField(blank=True, max_length=1000)),
                ('case_event_outcome', models.CharField(max_length=250, null=True)),
                ('next_hearing_date', models.DateField(null=True)),
                ('next_mention_date', models.DateField(null=True)),
                ('plea_taken', models.CharField(max_length=4, null=True)),
                ('application_outcome', models.CharField(max_length=4, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_events',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventServices',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('service_provided', models.CharField(max_length=250)),
                ('service_provider', models.CharField(max_length=250, null=True)),
                ('place_of_service', models.CharField(max_length=250, null=True)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_event_encounters',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventSummon',
            fields=[
                ('summon_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('honoured', models.BooleanField(default=False)),
                ('honoured_date', models.DateField(null=True)),
                ('summon_date', models.DateField(null=True)),
                ('summon_note', models.CharField(max_length=250, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_event_summon',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseGeo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_ward', models.CharField(max_length=100, null=True)),
                ('report_village', models.CharField(max_length=100, null=True)),
                ('occurence_ward', models.CharField(blank=True, max_length=100)),
                ('occurence_village', models.CharField(blank=True, max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'verbose_name': 'Case Geography',
                'verbose_name_plural': 'Case Geographies',
                'db_table': 'ovc_case_geo',
            },
        ),
        migrations.CreateModel(
            name='OvcCaseInformation',
            fields=[
                ('info_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('info_type', models.CharField(default='INFO', max_length=5)),
                ('info_item', models.CharField(max_length=6, null=True)),
                ('info_detail', models.TextField(null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Case Information',
                'verbose_name_plural': 'Case Information',
                'db_table': 'ovc_case_info',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Case Area Location',
                'verbose_name_plural': 'Case Area Locations',
                'db_table': 'ovc_case_location',
            },
        ),
        migrations.CreateModel(
            name='OvcCasePersons',
            fields=[
                ('pid', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('person_relation', models.CharField(max_length=5, null=True)),
                ('person_first_name', models.CharField(max_length=100, null=True)),
                ('person_other_names', models.CharField(max_length=100, null=True)),
                ('person_surname', models.CharField(max_length=100, null=True)),
                ('person_type', models.CharField(default='PERP', max_length=5)),
                ('person_identifier', models.CharField(max_length=15, null=True)),
                ('person_dob', models.DateField(null=True)),
                ('person_sex', models.CharField(choices=[('SMAL', 'Male'), ('SFEM', 'Female')], max_length=4, null=True)),
            ],
            options={
                'verbose_name': 'Case Other Person',
                'verbose_name_plural': 'Case Other Persons',
                'db_table': 'ovc_case_other_person',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseRecord',
            fields=[
                ('case_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_serial', models.CharField(default='XXXX', max_length=50)),
                ('perpetrator_status', models.CharField(default='PKNW', max_length=20)),
                ('perpetrator_first_name', models.CharField(max_length=100, null=True)),
                ('perpetrator_other_names', models.CharField(max_length=100, null=True)),
                ('perpetrator_surname', models.CharField(max_length=100, null=True)),
                ('perpetrator_relationship_type', models.CharField(max_length=50, null=True)),
                ('risk_level', models.CharField(max_length=50)),
                ('date_case_opened', models.DateField(default=datetime.date.today)),
                ('case_reporter_first_name', models.CharField(max_length=100, null=True)),
                ('case_reporter_other_names', models.CharField(max_length=100, null=True)),
                ('case_reporter_surname', models.CharField(max_length=100, null=True)),
                ('case_reporter_contacts', models.CharField(max_length=20, null=True)),
                ('case_reporter', models.CharField(blank=True, max_length=20)),
                ('court_name', models.CharField(max_length=200, null=True)),
                ('court_number', models.CharField(max_length=50, null=True)),
                ('police_station', models.CharField(max_length=200, null=True)),
                ('ob_number', models.CharField(max_length=50, null=True)),
                ('case_status', models.CharField(default='ACTIVE', max_length=50)),
                ('referral_present', models.CharField(default='AYES', max_length=10)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('parent_case_id', models.UUIDField(null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('case_remarks', models.TextField(null=True)),
                ('date_of_summon', models.DateField(null=True)),
                ('summon_status', models.BooleanField(default=None, null=True)),
                ('case_stage', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Case Record',
                'verbose_name_plural': 'Case Records',
                'db_table': 'ovc_case_record',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseSubCategory',
            fields=[
                ('case_sub_category_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('case_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('sub_category_id', models.CharField(max_length=4)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_sub_category',
            },
        ),
        migrations.CreateModel(
            name='OVCDischargeFollowUp',
            fields=[
                ('discharge_followup_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('type_of_discharge', models.CharField(max_length=20)),
                ('date_of_discharge', models.DateField(default=django.utils.timezone.now, null=True)),
                ('discharge_destination', models.CharField(blank=True, max_length=20, null=True)),
                ('reason_of_discharge', models.CharField(blank=True, max_length=1000)),
                ('expected_return_date', models.DateField(blank=True, null=True)),
                ('actual_return_date', models.DateField(blank=True, null=True)),
                ('discharge_comments', models.CharField(blank=True, max_length=1000)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_discharge_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=100)),
                ('document_description', models.CharField(max_length=200)),
                ('document_name', models.CharField(blank=True, max_length=100)),
                ('document_dir', models.CharField(blank=True, max_length=1000)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_documents',
            },
        ),
        migrations.CreateModel(
            name='OVCEconomicStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('household_economic_status', models.CharField(max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_economic_status',
            },
        ),
        migrations.CreateModel(
            name='OVCEducationFollowUp',
            fields=[
                ('education_followup_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('admitted_to_school', models.CharField(max_length=10)),
                ('admission_to_school_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('education_comments', models.CharField(max_length=1000, null=True)),
                ('not_in_school_reason', models.CharField(max_length=4, null=True)),
                ('school_admission_type', models.CharField(max_length=4, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_education_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCEducationLevelFollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_level', models.CharField(max_length=20, null=True)),
                ('admission_sublevel', models.CharField(max_length=20, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_education_level_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCFamilyCare',
            fields=[
                ('familycare_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('type_of_care', models.CharField(max_length=4)),
                ('certificate_number', models.CharField(max_length=20, null=True)),
                ('date_of_certificate_expiry', models.DateField(null=True)),
                ('type_of_adoption', models.CharField(max_length=4, null=True)),
                ('adoption_country', models.CharField(max_length=20, null=True)),
                ('date_of_adoption', models.DateField(default=django.utils.timezone.now, null=True)),
                ('court_name', models.CharField(max_length=100, null=True)),
                ('court_file_number', models.CharField(max_length=20, null=True)),
                ('parental_status', models.CharField(max_length=4, null=True)),
                ('contact_person', models.CharField(max_length=20, null=True)),
                ('adopting_mother_firstname', models.CharField(max_length=20, null=True)),
                ('adopting_mother_surname', models.CharField(max_length=20, null=True)),
                ('adopting_mother_othernames', models.CharField(max_length=20, null=True)),
                ('adopting_mother_idnumber', models.CharField(max_length=20, null=True)),
                ('adopting_mother_contacts', models.CharField(max_length=20, null=True)),
                ('adopting_father_firstname', models.CharField(max_length=20, null=True)),
                ('adopting_father_surname', models.CharField(max_length=20, null=True)),
                ('adopting_father_othernames', models.CharField(max_length=20, null=True)),
                ('adopting_father_idnumber', models.CharField(max_length=20, null=True)),
                ('adopting_father_contacts', models.CharField(max_length=20, null=True)),
                ('adopting_agency', models.CharField(max_length=20, null=True)),
                ('adoption_remarks', models.CharField(max_length=1000, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_family_care',
            },
        ),
        migrations.CreateModel(
            name='OVCFamilyStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_status', models.CharField(max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_family_status',
            },
        ),
        migrations.CreateModel(
            name='OVCFriends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friend_firstname', models.CharField(max_length=50)),
                ('friend_other_names', models.CharField(max_length=50)),
                ('friend_surname', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_friends',
            },
        ),
        migrations.CreateModel(
            name='OVCGokBursary',
            fields=[
                ('application_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sub_county', models.CharField(max_length=100, null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('sub_location', models.CharField(max_length=100, null=True)),
                ('village', models.CharField(max_length=100)),
                ('nearest_school', models.CharField(max_length=100, null=True)),
                ('nearest_worship', models.CharField(max_length=100, null=True)),
                ('in_school', models.BooleanField(default=True)),
                ('school_class', models.CharField(max_length=50)),
                ('primary_school', models.CharField(max_length=150)),
                ('school_marks', models.IntegerField(null=True)),
                ('father_names', models.CharField(max_length=100)),
                ('father_alive', models.BooleanField(default=True)),
                ('father_telephone', models.CharField(max_length=20, null=True)),
                ('mother_names', models.CharField(max_length=100)),
                ('mother_alive', models.BooleanField(default=True)),
                ('mother_telephone', models.CharField(max_length=20, null=True)),
                ('guardian_names', models.CharField(max_length=100, null=True)),
                ('guardian_telephone', models.CharField(max_length=20, null=True)),
                ('guardian_relation', models.CharField(max_length=20, null=True)),
                ('same_household', models.BooleanField(default=True)),
                ('father_chronic_ill', models.BooleanField(default=True)),
                ('father_chronic_illness', models.CharField(max_length=100, null=True)),
                ('father_disabled', models.BooleanField(default=True)),
                ('father_disability', models.CharField(max_length=100, null=True)),
                ('father_pension', models.BooleanField(default=True)),
                ('father_occupation', models.CharField(max_length=100, null=True)),
                ('mother_chronic_ill', models.BooleanField(default=True)),
                ('mother_chronic_illness', models.CharField(max_length=100, null=True)),
                ('mother_disabled', models.BooleanField(default=True)),
                ('mother_disability', models.CharField(max_length=100, null=True)),
                ('mother_pension', models.BooleanField(default=True)),
                ('mother_occupation', models.CharField(max_length=100, null=True)),
                ('fees_amount', models.IntegerField()),
                ('fees_balance', models.IntegerField()),
                ('school_secondary', models.CharField(max_length=150)),
                ('school_principal', models.CharField(max_length=150)),
                ('school_sub_county', models.CharField(max_length=100, null=True)),
                ('school_location', models.CharField(max_length=100, null=True)),
                ('school_sub_location', models.CharField(max_length=100, null=True)),
                ('school_village', models.CharField(max_length=100, null=True)),
                ('school_telephone', models.CharField(max_length=20, null=True)),
                ('school_email', models.CharField(max_length=100, null=True)),
                ('school_type', models.CharField(max_length=5)),
                ('school_category', models.CharField(max_length=5)),
                ('school_enrolled', models.CharField(max_length=5)),
                ('school_bank_branch', models.CharField(max_length=100)),
                ('school_bank_account', models.CharField(max_length=50)),
                ('school_recommend_by', models.CharField(max_length=5)),
                ('school_recommend_date', models.DateField(null=True)),
                ('chief_recommend_by', models.CharField(max_length=5)),
                ('chief_recommend_date', models.DateField(null=True)),
                ('chief_telephone', models.CharField(max_length=10)),
                ('csac_approved', models.BooleanField(default=True)),
                ('approved_amount', models.IntegerField(null=True)),
                ('ssco_name', models.CharField(max_length=100)),
                ('scco_signed', models.BooleanField(default=True)),
                ('scco_sign_date', models.DateField(null=True)),
                ('csac_chair_name', models.CharField(max_length=100)),
                ('csac_signed', models.BooleanField(default=True)),
                ('csac_sign_date', models.DateField(null=True)),
                ('application_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('nemis', models.CharField(max_length=100, null=True)),
                ('father_idno', models.CharField(max_length=10, null=True)),
                ('mother_idno', models.CharField(max_length=10, null=True)),
                ('year_of_bursary_award', models.CharField(max_length=4, null=True)),
                ('eligibility_score', models.CharField(max_length=10, null=True)),
                ('date_of_issue', models.DateField(null=True)),
                ('status_of_student', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'GoK Bursary',
                'verbose_name_plural': 'GoK Bursaries',
                'db_table': 'bursary_application',
            },
        ),
        migrations.CreateModel(
            name='OVCHobbies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobby', models.CharField(max_length=200)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_hobbies',
            },
        ),
        migrations.CreateModel(
            name='OVCMedical',
            fields=[
                ('medical_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('mental_condition', models.CharField(max_length=50)),
                ('physical_condition', models.CharField(max_length=50)),
                ('other_condition', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_medical',
            },
        ),
        migrations.CreateModel(
            name='OVCMedicalSubconditions',
            fields=[
                ('medicalsubcond_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('medical_condition', models.CharField(max_length=50)),
                ('medical_subcondition', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_medical_subconditions',
            },
        ),
        migrations.CreateModel(
            name='OVCNeeds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_description', models.CharField(max_length=250)),
                ('need_type', models.CharField(max_length=250)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_needs',
            },
        ),
        migrations.CreateModel(
            name='OVCPlacement',
            fields=[
                ('placement_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('admission_number', models.CharField(default='XXXX/YYYY', max_length=50)),
                ('residential_institution_name', models.CharField(blank=True, max_length=100)),
                ('admission_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('admission_type', models.CharField(blank=True, max_length=4)),
                ('transfer_from', models.CharField(blank=True, max_length=100, null=True)),
                ('admission_reason', models.CharField(blank=True, max_length=100)),
                ('holding_period', models.IntegerField(blank=True, null=True)),
                ('committing_period_units', models.CharField(max_length=4, null=True)),
                ('committing_period', models.IntegerField(null=True)),
                ('current_residential_status', models.CharField(blank=True, max_length=4)),
                ('has_court_committal_order', models.CharField(max_length=4)),
                ('free_for_adoption', models.CharField(blank=True, max_length=4, null=True)),
                ('court_order_number', models.CharField(max_length=20, null=True)),
                ('court_order_issue_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('committing_court', models.CharField(max_length=100, null=True)),
                ('placement_notes', models.TextField(blank=True, max_length=1000, null=True)),
                ('ob_number', models.CharField(blank=True, max_length=20, null=True)),
                ('placement_type', models.CharField(blank=True, default='Normal', max_length=10)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_placement',
            },
        ),
        migrations.CreateModel(
            name='OVCPlacementFollowUp',
            fields=[
                ('placememt_followup_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('followup_type', models.CharField(max_length=100)),
                ('followup_date', models.DateField(default=django.utils.timezone.now)),
                ('followup_details', models.CharField(blank=True, max_length=1000)),
                ('followup_outcome', models.CharField(blank=True, max_length=1000)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_placement_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCReferral',
            fields=[
                ('refferal_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('refferal_actor_type', models.CharField(max_length=4)),
                ('refferal_actor_specify', models.CharField(max_length=50)),
                ('refferal_to', models.CharField(max_length=4)),
                ('refferal_status', models.CharField(default='PENDING', max_length=20)),
                ('refferal_startdate', models.DateField(default=datetime.date.today)),
                ('refferal_enddate', models.DateField(null=True)),
                ('referral_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_referrals',
            },
        ),
        migrations.CreateModel(
            name='OVCReminders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_date', models.DateField(default=django.utils.timezone.now)),
                ('reminder_type', models.CharField(max_length=100)),
                ('reminder_description', models.CharField(max_length=1000)),
                ('reminder_status', models.CharField(max_length=10)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_reminders',
            },
        ),
    ]
